word <-'abc'
while(word=='abc'){
word <- readline(prompt="Enter a word: ")}
print(word)
?interactive
?interactive
setwd('MTG/')
source('Creatures.R')
rm(list= grep('^(i|creat\\.)', ls(), value=T))
source("MTG.R")
source("MTG.R")
if(!('rjson' %in% installed.packages())){
install.packages('rjson')
}
setwd('MTG/')
source('Creatures.R')
creatures <- data.frame(name=creat.name, cost=creat.cost, power=creat.power, thoughness=creat.toughness,
color=creat.color, text=creat.text, stringsAsFactors=F)
rm(list= grep('^(i|creat\\.)', ls(), value=T))
search.creature <<-function(deck){
opt<-readline('Select a creature?\n1-yes\npress any other key to exit: \n\n')
creat.nam <-creatures$name
if (opt=="1"){
s<-readline('Write a keyword to search a creature name: ')
searched.creatures<-grep(s, creat.nam, value=T, ignore.case=T)
if(length(searched.creatures)==0){
'I have not found that creature'
search.creature()
}
searched.creatures.p<-c()
for (i in 1:length(searched.creatures)){
searched.creatures.p <- c(searched.creatures.p, paste0(i, '-', searched.creatures[i]))
}
searched.creatures.prompt<-paste0(searched.creatures.p, collapse='\n')
rm(searched.creatures.p)
s <-readline(paste('Select a number to add a creature', searched.creatures.prompt, '\nx-select any other key to exit: '))
selected.creature <-searched.creatures[as.numeric(s)]
s<-readline(paste0('You have selected the creature named: "', selected.creature, '"\nWhat do you want to do:\n1-Add to the deck\n2-Select another creature\nx-Press any key to exit'))
if (s=='1'){
s<-readline('How many copies do you want in your deck?')
deck <<- c(deck, rep(as.numeric(s),selected.creature))
search.creature()
}else if(s=='2'){
search.creature()
}else{
'Bye!'
}
}
}
adding.lands<-function(deck){
opt<-readline('Which basic land do you want to add to your deck? (pick a number)\n1-Plains\n2-Mountains\n3-Swamps\n4-Forests\n5-Islands\nx-Select any other option to exit: ')
if(opt=='1'){
opt<-readline('How many Plains do you want to have in your deck?: ')
if (grepl('\\d+', opt)){
deck <<-c(deck, rep('{W}', as.numeric(opt)))
opt <-readline('Do you want to select any other type of land? (pick a number)\n1-yes\nx-Press any other key to exit: ')
if (opt=='1')
adding.lands()
}else if(opt=='2'){
opt<-readline('How many Mountains do you want to have in your deck?: ')
if (grepl('\\d+', opt)){
deck <<-c(deck, rep('{R}', as.numeric(opt)))
opt<-readline('Do you want to select any other type of land? (pick a number)\n1-yes\nx-Press any other key to exit: ')
if (opt=='1')
adding.lands()
}
}else if(opt=='3'){
opt<-readline('How many Swamps do you want to have in your deck?: ')
if (grepl('\\d+', opt)){
deck <<-c(deck, rep('{B}', as.numeric(opt)))
opt<-readline('Do you want to select any other type of land? (pick a number)\n1-yes\nx-Press any other key to exit: ')
if (opt=='1')
adding.lands()
}
}else if(opt=='4'){
opt<-readline('How many Forests do you want to have in your deck?: ')
if (grepl('\\d+', opt)){
deck <<-c(deck, rep('{G}', as.numeric(opt)))
opt<-readline('Do you want to select any other type of land? (pick a number)\n1-yes\nx-Press any other key to exit: ')
if (opt=='1')
adding.lands()
}else if(opt=='5'){
opt<-readline('How many Islands do you want to have in your deck?: ')
if (grepl('\\d+', opt)){
deck <<-c(deck, rep('{U}', as.numeric(opt)))
opt<-readline('Do you want to select any other type of land? (pick a number)\n1-yes\nx-Press any other key to exit: ')
if (opt=='1')
adding.lands()
}
}
}
}
}
source('MTG.R')
source('MTG.R')
?source
source('MTG.R')
source('MTG.R')
source('MTG.R')
getwd()
source('MTG.R')
source('MTG.R')
source('MTG.R')
warnings()
summary(creatures$thoughness)
summary(creatures$power)
grep('Lady',creatures$name, value=T)
length(grep('Lady',creatures$name, value=T))
creatures$name[creatures$power==0]
creatures$name[ creatures$thoughness == 0]
length(is.na(creatures$name))
length(!is.na(creatures$name))
length(creatures$name==NA)
